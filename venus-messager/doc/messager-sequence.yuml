// {type:sequence}
// {generate:true}

[App]cfg.JWT=genSecret()>[App]
//[App]client=NewNodeClient>[App]
[App]fx.Invoke(service.StartNodeEvents)>[App]
[App]StartPushMessage>[MessageService]
[App]listenHeadChangesOnce>[NodeEvents]
[App]start>[NodeEvents]
[NodeEvents]listenHeadChangesOnce>[NodeEvents]
[App]fx.Invoke(fx.Invoke(api.RunAPI)>[App]
[App]gatewayProvider=gateway.NewWalletClient()>[App]

[Venus-Sealer]PushMessage>[MessageService]
[MessageService]pushMessage>[MessageService]

[App]NewGatewayService>[gateway]
[gateway]gatewayService.>[App]
[App]fx.Supply(walletClient)>[App]
[MessageService]WalletHas>[WalletClient]
[WalletClient]has.>[MessageService]
[MessageService]SetMessage>[MessageState]
[MessageService]Result.>[Venus-Sealer]
[NodeEvents]ProcessNewHead>[MessageService]
[MessageService]ProcessNewHead(ms.headChans <- &headChan)>[MessageService]
[MessageService]refreshMessageState>[MessageService]
[MessageService]doRefreshMessageState>[MessageService]
[MessageService]delayTrigger>[MessageService]
[MessageService]pushMessageToPool>[MessageService]
[MessageService]SelectMessage>[MessageSelector]
[MessageSelector]selectAddrMessage>[MessageSelector]
[MessageSelector]WalletSign>[walletClient]
[walletClient]sigI.>[MessageSelector]
[MessageSelector]MsgSelectResult.>[MessageSelector]
[MessageSelector]MsgSelectResult.>[MessageService]
//listenHeadChangesOnce
//notifs=ChainNotify
