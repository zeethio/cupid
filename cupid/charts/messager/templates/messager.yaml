apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "messager.fullname" . }}
  labels:
    {{- include "messager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.pool.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "messager.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "messager.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "messager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "messager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: 
          - "run" 
          - "--auth-url"
          - "$(AUTH_URL)" 
          - "--node-url"
          - "$(NODE_URL)" 
          - "--gateway-url" 
          - "$(GATEWAY_URL)" 
          - "--auth-token"  
          - "$(ADMIN_TOKEN)"
          env:
          - name: ADMIN_TOKEN
            valueFrom:
              secretKeyRef:
                name: tokens
                key: adminToken
          - name: AUTH_URL
            valueFrom:
              configMapKeyRef:
                name: cupid-configmap
                key: authUrl
          - name: GATEWAY_URL
            valueFrom:
              configMapKeyRef:
                name: cupid-configmap
                key: gatewayUrl
          - name: NODE_URL
            valueFrom:
              configMapKeyRef:
                name: cupid-configmap
                key: nodeUrl
          ports:
            - name: http
              containerPort: 3453
              protocol: TCP
{{/*
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
*/}}
          resources:
            {{- toYaml .Values.agent.resources | nindent 12 }}
      {{- with .Values.pool.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pool.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pool.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
